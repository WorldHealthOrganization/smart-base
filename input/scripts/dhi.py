#!/usr/bin/env python3

cdhi_id = 'CDHIv1'
cdhsc_id = 'CDSCv1'
cm_id = "CDHIv1Hierarchy"

resources = { 'codesystems' : {} , 'valuesets' : {}  , 'conceptmaps':{}}

def save_resources(resources,directory):
    for id,resource in resources.items() :
        try:
            file = open("input/fsh/" + directory + "/" + id + ".fsh","w")
            print(resource,file=file)
            file.close()
        except IOError as e:
            print("Could not save resource of type: " + directory + "  with id: " + id + "\n")
            print(f"\tError: {e}")


def generate_cs_and_vs_from_dict(id:str, title:str, dict:dict, resources:dict):
    if len(dict) == 0:
        return False
    
    codesystem = 'CodeSystem: ' + escape(id) + '\n'
    codesystem += 'Title: "' + escape(title) + '"\n'
    codesystem += 'Description:  "CodeSystem for ' + escape(title) + '. Autogenerated from DAK artifacts"\n'
    codesystem += '* ^experimental = true\n'
    codesystem += '* ^caseSensitive = false\n'
    codesystem += '* ^status = #active\n'
    for code,name in dict.items():
        codesystem += '* #' + escape(code) +  ' "' + escape(name) + '"\n'
        
    valueset = 'ValueSet: ' + escape(id) + '\n'
    valueset += 'Title: "' + escape(title) + '"\n'
    valueset += 'Description:  "Value Set for ' + escape(title) + '. Autogenerated from DAK artifacts"\n'
    valueset += '* ^status = #active\n'
    valueset += '* ^experimental = true\n'
    valueset += '* include codes from system ' + escape(id) + '\n'
    

    resources['codesystems'][id] = codesystem
    resources['valuesets'][id] = valueset

    return True

def escape(input):
    if ( not (isinstance(input,str))):
        return None
    return input.replace('"', r'\"')


print ("System Categories")
interventions = {}
for line in open('input/data/system_categories.txt', 'r'):
    parts = line.strip().split(' ',1)
    if (len(parts) < 2):
        continue
    code = parts[0].strip().rstrip(".")
    intervention = parts[1].strip()
    print ("\t" + intervention + ' = ' + code)
    interventions[code] = intervention    
generate_cs_and_vs_from_dict(cdhsc_id, 'Classification of Digital Health System Categories v1', interventions, resources)


print ("Interventions")
interventions = {}
parent_map = {}

for line in open('input/data/dhi_v1.txt', 'r'):
    parts = line.strip().split(' ',1)
    if (len(parts) < 2):
        continue
    codes = parts[0].strip().split('.')
    code = ".".join(codes)
    parent_code = ".".join(codes[:-1])
    intervention = parts[1].strip()
    print ("\t" + intervention + ' = ' + code)
    interventions[code] = intervention
    if (parent_code):
        parent_map[code] = parent_code        
generate_cs_and_vs_from_dict(cdhi_id, 'Classification of Digital Health Interventions v1', interventions, resources)

if (len(parent_map) > 0):
    title = "Hierarchy of the Classification of Digital Health Interventions v1"
    cm = "Instance:  " + escape(cm_id) + '\n'
    cm += "InstanceOf:   ConceptMap\n"
    cm += "Description:  \"Mapping to represent hierarchy within " + title + ".\"\n"
    cm += "Usage:        #definition\n"
    cm += "* name = \"" + escape(cm_id) + "\"\n"
    cm += "* title = \"" + escape(title) + "\"\n"
    cm += "* status = #active\n"
    cm += "* experimental = false\n"
    cm += "* group[+]\n"
    cm += "  * source = Canonical(" + cdhi_id + ")\n"
    cm += "  * target = Canonical(" + cdhi_id + ")\n"

    for code,parent_code in parent_map.items():
        cm += "  * insert ElementMap( #" +  code + ", #" + parent_code + ", narrower)\n"
    resources['conceptmaps'][cm_id] = cm
    



for directory, instances in resources.items() :
    save_resources(instances,directory)


    
    
